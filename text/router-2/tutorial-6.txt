Для более удоюной дальнейшей разработки устанавливаем hot module replacement
это нужно чтоб при каких то изменениях например изменили шрифт чтоб он изменился но страницу не перезапускал

в папке
    config
        build
            buildDevServer.ts

                export function buildDevServer(options: BuildOptions): DevServerConfiguration {
                    return {
                        port: options.port,
                        open: true,
                        historyApiFallback: true,
                        hot: true // +++ добавляем это значение
                    }
                }






    и в buildPlugins.ts

        export function buildPlugins({paths, isDev}:BuildOptions): webpack.WebpackPluginInstance[] {
            return [
                new webpack.ProgressPlugin(),
                new HtmlWebpackPlugin({
                    template: paths.html
                }),
                new MiniCssExtractPlugin({
                    filename: 'css/[name].[contenthash:8].css',
                    chunkFilename: 'css/[name].[contenthash:8].css'
                }),
                new webpack.DefinePlugin({
                    __IS_DEV__: JSON.stringify(isDev),
                }),
                new webpack.HotModuleReplacementPlugin() // ++  добавляем это! Он идет по умолчанию с webpack
            ]
        }