1. В папке app > router создаем файл AppRouter.tsx и переносим из App.tsx все route

export const AppRouter = () => {
    return (
        <Suspense fallback={<div>Loading....</div>}>
            <Routes>
                <Route path={'/about'} element={<AboutPage/>}/>
                <Route path={'/'} element={<MainPage/>}/>
            </Routes>
        </Suspense>
    );
};


2. В папке shared создадим папку routeConfig а в ней routeConfig.tsx

    import {RouteProps} from "react-router-dom";
    import MainPage from "pages/MainPage/ui/MainPage";
    import {AboutPage} from "pages/AboutPage";


    export enum AppRoutes {
        MAIN = 'main',
        ABOUT = 'about'
    }

    export const RoutePath: Record<AppRoutes, string> = {
        [AppRoutes.MAIN]: '/',
        [AppRoutes.ABOUT]: '/about'
    }

    export const routeConfig: Record<AppRoutes, RouteProps> = {
        [AppRoutes.MAIN]: {
            path: RoutePath.main,
            element: <MainPage />
        },
        [AppRoutes.ABOUT]: {
            path: RoutePath.about,
            element: <AboutPage />
        },
    }


3. Теперь В папке app > router > AppRouter.tsx делаем так


    import React, {Suspense} from 'react';
    import {Route, Routes} from "react-router-dom";
    import {routeConfig} from "shared/config/routeConfig/routeConfig";

    export const AppRouter = () => {
        return (
            <Suspense fallback={<div>Loading....</div>}>
                <Routes>
                    {Object.values(routeConfig).map(({element, path}) => (
                        <Route
                            key={path}
                            path={path}
                            element={element}
                        />
                    ))}
                </Routes>
            </Suspense>
        );
    };


Теперь route у нас определены на уровне config


